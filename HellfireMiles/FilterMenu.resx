<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIB8AAAEAIAAkEAAAFgAAACgAAAAgAAAAPgAAAAEAIAAAAAAAgA8AAMMOAADDDgAAAAAAAAAA
        AAAnDhH/MRMX/zYVFv8+Gxb/Ohsd/yUOGv8fCA3/HQcH/x8IBv8dBwX/GwYD/xoGA/8dCQn/Ig0U/yEM
        Dv8iDQ7/KA4Q/ygMDf8qDAz/KgwM/yYKCP8nCgj/KAoL/ygKCv8oCgn/Kw0P/zARE/8sDQ//KgsL/ycK
        B/8oCwn/JwkH/yoOEv8nDRH/JwwQ/zARDv8sDw7/KxER/ycPDv8aBgT/GwYF/xwIDP8aCQ3/HQoM/yYS
        IP8rGCv/KBUk/yYUIP8jDhP/IwkJ/yUJCv8lCQr/JAgI/yMHBv8mCAj/KAoK/ykLC/8tDRH/MBEV/zAS
        FP8tDg7/KwsL/yYJCP8lCAb/KA0N/yULDf8mDBD/KQsN/ysODP8qExX/ORsY/xwHBP8ZBAP/HAsU/yAP
        H/8kDxv/JhIj/ygWK/8oFir/KRYp/yQPGf8hCQz/JwsQ/ygKDP8pCQr/JQgG/yMHBP8nCQj/KAkI/ykL
        C/8xERT/MxUZ/zERFP8tDRD/KAoL/yUJBv8pDAv/Kw0O/yULDv8kCgz/IQoJ/yoTIv8rEx//HwkH/xwH
        Bv8eCAr/IQsS/yMNFf8kDxb/KB0r/ygaKv8oFif/JREd/yAKDv8eBgX/JAgI/yQIB/8lCQb/JggG/yYI
        Bv8nCQb/JwkJ/ysMDv8uDxL/MRAT/y0OD/8rDQ3/LA8O/yUJCP8oCgr/IQgG/x4GBv8hCQ3/KBAg/yMO
        GP8YBQT/KA8Q/yUNEf8gCg3/JQ8V/ywdKP8pFiL/JBAY/yQRG/8gDBX/GwgM/yEOFP8jCQz/IwgI/ycK
        Cf8rCwr/KQkH/ycJCf8oCgz/KAkJ/yoKC/8sDA7/KwwN/ykLCv8nCQn/KRAK/x0GBP8jCg7/Iw0T/yQO
        Ff8jCxT/JRYh/yMXHf8nDg7/JxAQ/yMOEf8nEhn/KhUe/yoZJv8hEhv/IDFP/yMjOf8lGSz/KBko/yUQ
        Gv8gCAf/IwgI/ycJCf8sCwn/KgoK/yoLDf8oCQn/KgoJ/yoMDf8pCwz/KgoL/ycIB/9GJBj/MBMQ/yYM
        FP8oER//KyY4/yQwQ/8iEyD/HAwQ/yMPFP8jEBj/Ih4//ycYJ/8sIzb/KR0r/yETHv8oUYD/LUZx/yon
        Qv8oIjr/KRYp/yUOFv8jCAf/JwkJ/ygJB/8lCAX/JwkH/ygJCP8nCAf/KQoJ/ykKCf8qCQr/KwoK/ysP
        C/8vExT/KQ8Y/ysTH/8oIjX/J0Fi/yUeO/8gDRf/IxAX/yISI/8eLHH/ITBV/y5ln/8uX5T/LE57/zFO
        ev8wT33/KidC/ykhOf8oFyn/LB8y/yEMEP8jCAf/JggI/ygKB/8qCgj/KwoK/ygJB/8qCgf/KQkI/ygJ
        Cf8rCgv/Sigf/y4SEf8wGSL/OCMu/yYhO/8iMln/KDRZ/yUyVP8mQGP/KVKB/y9tr/82itj/N4zd/zeA
        y/85gs3/Povb/ztppv8uOlz/KypE/ywiO/8uIjb/JA8Y/yEHB/8kCAf/IwcF/y0PDv87HBz/KQkH/ysL
        CP8pCgn/KQsJ/ykKCf8/GxX/SCYb/y4RDf8xIS3/JUJy/ylhm/8zdrD/NHe0/zN4uf84g8z/O4va/z2Z
        6/83hMv/MGyq/zFopf84fcb/NlOH/zE+ZP8sNlb/KydE/ykXKf8cCAz/HQYH/yYKDf8kCAb/KAkH/y4N
        Cv8sCgj/KgoH/ykJB/8pCgf/KAkI/zQSCv86GBH/RyMa/ykmPP8rV5D/MXKv/zp+vf86gcT/Po3Y/z+Y
        6/8/nfD/QKX1/z2X5v83jtb/O47M/0Cd3v85a5r/NkZ1/zU8YP8tMk//KSA4/yIOGP8eBgn/IwwS/yIJ
        Cv8lCAf/KAkH/yoKCP8pCQj/KgoL/ysKC/8sCg3/LQ0H/zAOCP84FhL/NS5E/yxXjP84ebb/O4PG/zyG
        zP8/kuH/QaL3/0Go+v9Bq/j/P57x/z6p9f9Fvvb/V8z3/1uy2/85T4L/OUVw/zQ2WP8uMUz/Kh80/yQO
        Gv8tGyz/KBQh/yMICP8mBwf/KQkH/ykJCP8pCwz/Lg4S/zEQF/8zFQ//LA0J/zAREf8tOVr/NG+n/zl9
        u/88hsv/PYjR/0CQ2/9BluP/QJHY/z6P1P85kNb/NojL/0Sx6/9k2/j/ZcLm/zxViP89THn/OEBo/zU2
        Uv80NlH/LCA2/y8ZKv8qEyT/JQwT/yQICP8nCQn/KwwL/ysMDP8uDhP/MxQb/z8gG/88HRT/Kg8Q/y9K
        cf8zdrH/NGym/zxtof9Dapn/SmWN/1BggP9LT2b/UWmI/06o3/89muD/T7/x/27i+f9szOn/QFuL/0BM
        d/87RW7/PUVp/0NLaf83Nkz/LBcm/yUNGf8jDBX/JQsQ/yMICP8pCgr/LQwN/y4PE/8zFR3/LhQR/zQW
        Ff9DJSX/L058/ytsqP88VHr/TElc/0Q7Sf9FPEn/VVRl/09LWv9dcYv/Vrft/0i19f920fX/fOb5/3PS
        6P9CXYn/Q055/0BIcf9FTnP/T2KK/0RLZv80JTD/KhYi/yIME/8jDRP/IQgM/ycJCv8rDA3/Lg8R/zER
        Ff9OLif/ORwb/y8aJP85YI7/N3eu/0BRcP9LRlf/R0JT/0lKXf9UXnj/UGGB/1uDsP9duPL/T7f1/4zP
        9P+O7fv/etXn/0NYfv9ETXT/Q0py/0tQcP9acZn/VWaL/09DTv88M0P/LR8t/yYQGP8jDBH/JRAX/ykM
        D/8uDxH/NhUc/z0hIv9OKyf/QSo0/0Vij/9FfrL/R2uX/01qlP9NdKL/Tn+1/1CGw/9OiMf/SpHU/0yt
        9f9Mtfb/ddL2/7Ly/v+d1OL/WV50/0dLa/9DSG3/UlVw/3WQrP9eb47/Oio5/0A2SP8/Nkr/MSQ3/yAL
        Ev8qIDX/KRId/ywPFf82FR//SCsq/0EiI/9KLS//UWmO/0iDt/9AdKj/Qn+9/0aGw/9Iicv/SozS/0uO
        0f9Qltv/WrD2/3jI9/+cz/X/nbnl/5aZqv+GeYD/amJt/0pJYv9NSl//bXiJ/258jv80IS//RD5V/0hF
        Xf9GRmD/Myw+/ykaKv8sHC3/LBQh/y0OGP9OMC7/Ty8s/0QnKf9NW3T/UoSz/0uCuv9Hgbn/SIa//02J
        x/9Sjc3/Xpnb/26j4f9+p9P/fpW7/3d/p/91cIn/eW5+/4J3hf+RgYb/fG51/1pNWP9YTVr/WlFb/zYf
        Kv9IQVb/UFJu/0RBXf9LUGz/ODVN/y4rR/8sHzD/JQoS/0kxNv9PNDf/UDQ2/0w1Of9ZUmD/YmqE/15w
        jf9id5n/Znid/2l0lf9naof/YVtz/1pQZP9XS1z/V0hW/1dJWv9pXnD/em98/4F1gP+JeHr/bl5l/1RI
        Uv9UQEL/Nh0k/0k7R/9VVW7/SUlo/1JWcf9MT2v/OThT/y0jNf8kCg//QDA7/0YzPP9ONz7/TzY7/0cv
        M/9FKi3/SS80/1I6Q/9UPkr/UDpG/0o0P/9OOEL/Uj1I/1lGUf9dSlj/Y1Ri/1tQYP9gVWT/cGNp/3Rc
        Wf9oUFL/RDI8/0U2Rv82HSL/SjlB/1hRZP9QU3T/WV96/1Zgf/9JTWr/OThR/ykXJf83Ji3/PCs1/0g2
        P/9NNTv/Ujg6/08yM/9DKSv/SSwr/1A1N/9ONz7/UTpE/1I8Rf9VQEv/X01X/2JPW/9fTVr/WUlV/2VY
        Yv+IdoD/jHV9/21UU/9AMUb/SUBh/z4mKP9RP0L/WEtY/1BPaf9eYXb/aoKo/1dmiP9SYIP/Slh9/zQl
        Kf9AMjf/U0RN/0o6Qv9TO0H/Vz1B/1A3O/9KLy3/Y0E3/2lNSP9UPUL/SjU8/047Q/9SQUn/XEhP/1pF
        Sv97anL/q5qm/8O00/+2qcf/cFxf/0VFVP8/Mzz/OB8h/0gwMP9YSE7/VlJi/19ZZP+GoLf/bYGf/1Rh
        gv9deKL/UUdN/1hMU/9NQEb/U0tI/1BAQv9VPUT/UTlA/00zNP94VUv/tYpx/62Hcf97XlT/dl9d/5F4
        df+UenD/g2tj/6aUm/+9qLP/yLTP/6iVq/9xYGT/YF5s/1VMVP8/Jyj/SjEy/1tGR/9ZUFv/Xk5S/3Bv
        eP9qb4H/VF5//1htmP9bUFn/al1l/2daXf9UR0b/UENB/1NBQ/9QOT7/STE1/18/Ov+qfWT/w5Nz/6h/
        av+Ud2//q4x//6GDcv+Pc2P/p5CU/7+jp/+jh43/eGBf/2xfZv9waHj/a2Fs/0YzOP9oVlv/alhe/1lF
        TP9bRUf/XktO/2JaZP9aXnn/V2OH/0ZDSf9IQkf/VExQ/1FFSP9TRUb/Tjo5/0k1Nv9JMjT/SC0s/2ZB
        NP+ecVj/p3tc/4lrWv+Zelv/m3xj/4tuV/+EaGP/imtm/2xNSP9uWFX/aFZa/2NSW/9gUF3/XUxX/4Jx
        eP9xZHH/TUJX/1ZFUP9cRkf/amBn/11Ybf9aXHr/WmNs/1djav9VYWX/VVRV/21hZv9aR0f/SzUy/0gx
        Lv9BKSf/RSkm/1IxKP9jQC7/YkQ4/3BVQv9sUT//WD41/1Q5NP9nSUH/b1NL/21UUP9rU1L/Z09S/2BI
        Tf9rV1j/dGFj/2VUXv9SRlj/XVNm/2Naaf9iU1n/XFBe/1tadf9/gJL/cHaC/1ddW/9VUlH/V0VI/1lE
        Q/9UPTb/TTUu/0QsJ/9JMCz/PiIh/z0hH/9FKCb/Risn/1E2MP9NMi7/VDYy/25OQ/9zVEr/cFJL/2xO
        Sf9mSUf/b1VQ/3VcV/9wV1X/bVdZ/2tYXf9uXmj/aWJ1/2Vdb/9dTlr/WUtZ/5ySpP+Uipj/dmhl/19P
        Sf9XR0T/UkE//1lCPf9aQjr/TzUx/0wwLP9DLzL/NSs2/zUtO/9APUv/WFFZ/25ZUv9lSUH/b1FF/3dW
        Sf9xUEX/b1BE/3VXSf92Vkr/cE9J/25OTP9sT1D/bVRW/3BaXv9zXWP/a1po/2JWZ/9jV2f/sKW3/6WY
        p/+Of3//gG9o/3NfV/9aQz3/XUI9/15FOv9ZPDT/UzYx/0tcd/9GnM//RZzR/0iMxP9Ohbb/UH2m/110
        kP92bG7/gWVW/4JlVP9/YEz/eFZG/3RPQ/9qRUD/Yj8+/1s8Pf9gQkP/ZEZI/2FHS/9xXGL/dGJq/21d
        av+rnrD/rJ6u/5iHiv+Jenn/i3l0/3xlXf9rTEX/akxF/2NFP/9dQD3/VG+Q/1Cby/9OZnz/WF9t/1td
        aP9JbI//UpXK/151kv9pT0z/e2FX/4RoV/9+XUv/dE1D/1w5NP9EJyj/OyEh/0csLf9NLjD/WTk8/2RK
        T/99aW7/fWhs/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>